/*
 * This file is generated by jOOQ.
 */
package kr.co.ihab.speechear.persistence.jooq;


import javax.annotation.processing.Generated;

import kr.co.ihab.speechear.persistence.jooq.tables.RoleInfo;
import kr.co.ihab.speechear.persistence.jooq.tables.UserActivity;
import kr.co.ihab.speechear.persistence.jooq.tables.UserAssignment;
import kr.co.ihab.speechear.persistence.jooq.tables.UserInfo;
import kr.co.ihab.speechear.persistence.jooq.tables.UserRoles;
import kr.co.ihab.speechear.persistence.jooq.tables.UserSetting;
import kr.co.ihab.speechear.persistence.jooq.tables.UserTrainingChapter;
import kr.co.ihab.speechear.persistence.jooq.tables.UserTrainingGroup;
import kr.co.ihab.speechear.persistence.jooq.tables.UserTrainingProgress;
import kr.co.ihab.speechear.persistence.jooq.tables.UserTrainingScore;
import kr.co.ihab.speechear.persistence.jooq.tables.UserTrainingType;
import kr.co.ihab.speechear.persistence.jooq.tables.records.RoleInfoRecord;
import kr.co.ihab.speechear.persistence.jooq.tables.records.UserActivityRecord;
import kr.co.ihab.speechear.persistence.jooq.tables.records.UserAssignmentRecord;
import kr.co.ihab.speechear.persistence.jooq.tables.records.UserInfoRecord;
import kr.co.ihab.speechear.persistence.jooq.tables.records.UserRolesRecord;
import kr.co.ihab.speechear.persistence.jooq.tables.records.UserSettingRecord;
import kr.co.ihab.speechear.persistence.jooq.tables.records.UserTrainingChapterRecord;
import kr.co.ihab.speechear.persistence.jooq.tables.records.UserTrainingGroupRecord;
import kr.co.ihab.speechear.persistence.jooq.tables.records.UserTrainingProgressRecord;
import kr.co.ihab.speechear.persistence.jooq.tables.records.UserTrainingScoreRecord;
import kr.co.ihab.speechear.persistence.jooq.tables.records.UserTrainingTypeRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<RoleInfoRecord> ROLE_INFO_PK = Internal.createUniqueKey(RoleInfo.ROLE_INFO, DSL.name("role_info_pk"), new TableField[] { RoleInfo.ROLE_INFO.ID }, true);
    public static final UniqueKey<UserAssignmentRecord> USER_MANAGEMENT_PK = Internal.createUniqueKey(UserAssignment.USER_ASSIGNMENT, DSL.name("user_management_pk"), new TableField[] { UserAssignment.USER_ASSIGNMENT.ID, UserAssignment.USER_ASSIGNMENT.MANAGER }, true);
    public static final UniqueKey<UserInfoRecord> USER_INFO_PK = Internal.createUniqueKey(UserInfo.USER_INFO, DSL.name("user_info_pk"), new TableField[] { UserInfo.USER_INFO.ID }, true);
    public static final UniqueKey<UserRolesRecord> USER_ROLES_PK = Internal.createUniqueKey(UserRoles.USER_ROLES, DSL.name("user_roles_pk"), new TableField[] { UserRoles.USER_ROLES.USER_ID, UserRoles.USER_ROLES.ROLE_ID }, true);
    public static final UniqueKey<UserSettingRecord> USER_SETTING_PK = Internal.createUniqueKey(UserSetting.USER_SETTING, DSL.name("user_setting_pk"), new TableField[] { UserSetting.USER_SETTING.USER_ID, UserSetting.USER_SETTING.NOISE_TYPE, UserSetting.USER_SETTING.PLAY_SPEED }, true);
    public static final UniqueKey<UserTrainingChapterRecord> USER_TRAINING_CHAPTER_PK = Internal.createUniqueKey(UserTrainingChapter.USER_TRAINING_CHAPTER, DSL.name("user_training_chapter_pk"), new TableField[] { UserTrainingChapter.USER_TRAINING_CHAPTER.TRAINING_ID, UserTrainingChapter.USER_TRAINING_CHAPTER.TRAINING_CATEGORY, UserTrainingChapter.USER_TRAINING_CHAPTER.TRAINING_CHAPTER }, true);
    public static final UniqueKey<UserTrainingGroupRecord> USER_TRAINING_GROUP_PK = Internal.createUniqueKey(UserTrainingGroup.USER_TRAINING_GROUP, DSL.name("user_training_group_pk"), new TableField[] { UserTrainingGroup.USER_TRAINING_GROUP.TRAINING_ID, UserTrainingGroup.USER_TRAINING_GROUP.TRAINING_CATEGORY, UserTrainingGroup.USER_TRAINING_GROUP.CATEGORY_NAME }, true);
    public static final UniqueKey<UserTrainingProgressRecord> USER_TRAINING_PROGRESS_PK = Internal.createUniqueKey(UserTrainingProgress.USER_TRAINING_PROGRESS, DSL.name("user_training_progress_pk"), new TableField[] { UserTrainingProgress.USER_TRAINING_PROGRESS.TRAINING_ID, UserTrainingProgress.USER_TRAINING_PROGRESS.USER_ID, UserTrainingProgress.USER_TRAINING_PROGRESS.TRAINING_CATEGORY, UserTrainingProgress.USER_TRAINING_PROGRESS.TRAINING_CHAPTER }, true);
    public static final UniqueKey<UserTrainingScoreRecord> USER_TRAINING_SCORE_PK = Internal.createUniqueKey(UserTrainingScore.USER_TRAINING_SCORE, DSL.name("user_training_score_pk"), new TableField[] { UserTrainingScore.USER_TRAINING_SCORE.USER_ID, UserTrainingScore.USER_TRAINING_SCORE.TRAINING_ID, UserTrainingScore.USER_TRAINING_SCORE.TRAINING_CATEGORY, UserTrainingScore.USER_TRAINING_SCORE.TRAINING_CHAPTER }, true);
    public static final UniqueKey<UserTrainingTypeRecord> USER_TRAINING_TYPE_PK = Internal.createUniqueKey(UserTrainingType.USER_TRAINING_TYPE, DSL.name("user_training_type_pk"), new TableField[] { UserTrainingType.USER_TRAINING_TYPE.TRAINING_ID, UserTrainingType.USER_TRAINING_TYPE.TRAINING_NAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<UserActivityRecord, UserInfoRecord> USER_ACTIVITY__USER_HISTORY_FK = Internal.createForeignKey(UserActivity.USER_ACTIVITY, DSL.name("user_history_fk"), new TableField[] { UserActivity.USER_ACTIVITY.ID }, Keys.USER_INFO_PK, new TableField[] { UserInfo.USER_INFO.ID }, true);
    public static final ForeignKey<UserAssignmentRecord, UserInfoRecord> USER_ASSIGNMENT__USER_MANAGEMENT_FK = Internal.createForeignKey(UserAssignment.USER_ASSIGNMENT, DSL.name("user_management_fk"), new TableField[] { UserAssignment.USER_ASSIGNMENT.ID }, Keys.USER_INFO_PK, new TableField[] { UserInfo.USER_INFO.ID }, true);
    public static final ForeignKey<UserAssignmentRecord, UserInfoRecord> USER_ASSIGNMENT__USER_MANAGEMENT_FK_1 = Internal.createForeignKey(UserAssignment.USER_ASSIGNMENT, DSL.name("user_management_fk_1"), new TableField[] { UserAssignment.USER_ASSIGNMENT.MANAGER }, Keys.USER_INFO_PK, new TableField[] { UserInfo.USER_INFO.ID }, true);
    public static final ForeignKey<UserRolesRecord, UserInfoRecord> USER_ROLES__USER_ROLES_FK = Internal.createForeignKey(UserRoles.USER_ROLES, DSL.name("user_roles_fk"), new TableField[] { UserRoles.USER_ROLES.USER_ID }, Keys.USER_INFO_PK, new TableField[] { UserInfo.USER_INFO.ID }, true);
    public static final ForeignKey<UserRolesRecord, RoleInfoRecord> USER_ROLES__USER_ROLES_FK_1 = Internal.createForeignKey(UserRoles.USER_ROLES, DSL.name("user_roles_fk_1"), new TableField[] { UserRoles.USER_ROLES.ROLE_ID }, Keys.ROLE_INFO_PK, new TableField[] { RoleInfo.ROLE_INFO.ID }, true);
}
