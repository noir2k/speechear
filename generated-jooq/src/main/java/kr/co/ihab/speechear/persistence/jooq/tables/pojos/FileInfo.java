/*
 * This file is generated by jOOQ.
 */
package kr.co.ihab.speechear.persistence.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileInfo implements Serializable {

    private static final long serialVersionUID = 1L;

    private String name;
    private String extension;
    private LocalDateTime dateCreated;
    private String filePath;
    private LocalDateTime dateModified;

    public FileInfo() {}

    public FileInfo(FileInfo value) {
        this.name = value.name;
        this.extension = value.extension;
        this.dateCreated = value.dateCreated;
        this.filePath = value.filePath;
        this.dateModified = value.dateModified;
    }

    public FileInfo(
        String name,
        String extension,
        LocalDateTime dateCreated,
        String filePath,
        LocalDateTime dateModified
    ) {
        this.name = name;
        this.extension = extension;
        this.dateCreated = dateCreated;
        this.filePath = filePath;
        this.dateModified = dateModified;
    }

    /**
     * Getter for <code>public.file_info.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.file_info.name</code>.
     */
    public FileInfo setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>public.file_info.extension</code>.
     */
    public String getExtension() {
        return this.extension;
    }

    /**
     * Setter for <code>public.file_info.extension</code>.
     */
    public FileInfo setExtension(String extension) {
        this.extension = extension;
        return this;
    }

    /**
     * Getter for <code>public.file_info.date_created</code>.
     */
    public LocalDateTime getDateCreated() {
        return this.dateCreated;
    }

    /**
     * Setter for <code>public.file_info.date_created</code>.
     */
    public FileInfo setDateCreated(LocalDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }

    /**
     * Getter for <code>public.file_info.file_path</code>.
     */
    public String getFilePath() {
        return this.filePath;
    }

    /**
     * Setter for <code>public.file_info.file_path</code>.
     */
    public FileInfo setFilePath(String filePath) {
        this.filePath = filePath;
        return this;
    }

    /**
     * Getter for <code>public.file_info.date_modified</code>.
     */
    public LocalDateTime getDateModified() {
        return this.dateModified;
    }

    /**
     * Setter for <code>public.file_info.date_modified</code>.
     */
    public FileInfo setDateModified(LocalDateTime dateModified) {
        this.dateModified = dateModified;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FileInfo other = (FileInfo) obj;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.extension == null) {
            if (other.extension != null)
                return false;
        }
        else if (!this.extension.equals(other.extension))
            return false;
        if (this.dateCreated == null) {
            if (other.dateCreated != null)
                return false;
        }
        else if (!this.dateCreated.equals(other.dateCreated))
            return false;
        if (this.filePath == null) {
            if (other.filePath != null)
                return false;
        }
        else if (!this.filePath.equals(other.filePath))
            return false;
        if (this.dateModified == null) {
            if (other.dateModified != null)
                return false;
        }
        else if (!this.dateModified.equals(other.dateModified))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.extension == null) ? 0 : this.extension.hashCode());
        result = prime * result + ((this.dateCreated == null) ? 0 : this.dateCreated.hashCode());
        result = prime * result + ((this.filePath == null) ? 0 : this.filePath.hashCode());
        result = prime * result + ((this.dateModified == null) ? 0 : this.dateModified.hashCode());
        return result;
    }
}
