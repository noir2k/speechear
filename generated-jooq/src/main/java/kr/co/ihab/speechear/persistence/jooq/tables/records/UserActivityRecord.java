/*
 * This file is generated by jOOQ.
 */
package kr.co.ihab.speechear.persistence.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import kr.co.ihab.speechear.persistence.jooq.tables.UserActivity;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserActivityRecord extends TableRecordImpl<UserActivityRecord> implements Record4<String, String, Double, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_activity.id</code>.
     */
    public UserActivityRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_activity.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.user_activity.activity</code>.
     */
    public UserActivityRecord setActivity(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_activity.activity</code>.
     */
    public String getActivity() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user_activity.activity_time</code>.
     */
    public UserActivityRecord setActivityTime(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user_activity.activity_time</code>.
     */
    public Double getActivityTime() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.user_activity.activity_date</code>.
     */
    public UserActivityRecord setActivityDate(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.user_activity.activity_date</code>.
     */
    public LocalDateTime getActivityDate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, Double, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, Double, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return UserActivity.USER_ACTIVITY.ID;
    }

    @Override
    public Field<String> field2() {
        return UserActivity.USER_ACTIVITY.ACTIVITY;
    }

    @Override
    public Field<Double> field3() {
        return UserActivity.USER_ACTIVITY.ACTIVITY_TIME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return UserActivity.USER_ACTIVITY.ACTIVITY_DATE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getActivity();
    }

    @Override
    public Double component3() {
        return getActivityTime();
    }

    @Override
    public LocalDateTime component4() {
        return getActivityDate();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getActivity();
    }

    @Override
    public Double value3() {
        return getActivityTime();
    }

    @Override
    public LocalDateTime value4() {
        return getActivityDate();
    }

    @Override
    public UserActivityRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public UserActivityRecord value2(String value) {
        setActivity(value);
        return this;
    }

    @Override
    public UserActivityRecord value3(Double value) {
        setActivityTime(value);
        return this;
    }

    @Override
    public UserActivityRecord value4(LocalDateTime value) {
        setActivityDate(value);
        return this;
    }

    @Override
    public UserActivityRecord values(String value1, String value2, Double value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserActivityRecord
     */
    public UserActivityRecord() {
        super(UserActivity.USER_ACTIVITY);
    }

    /**
     * Create a detached, initialised UserActivityRecord
     */
    public UserActivityRecord(String id, String activity, Double activityTime, LocalDateTime activityDate) {
        super(UserActivity.USER_ACTIVITY);

        setId(id);
        setActivity(activity);
        setActivityTime(activityTime);
        setActivityDate(activityDate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserActivityRecord
     */
    public UserActivityRecord(kr.co.ihab.speechear.persistence.jooq.tables.pojos.UserActivity value) {
        super(UserActivity.USER_ACTIVITY);

        if (value != null) {
            setId(value.getId());
            setActivity(value.getActivity());
            setActivityTime(value.getActivityTime());
            setActivityDate(value.getActivityDate());
            resetChangedOnNotNull();
        }
    }
}
